"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testPackage = testPackage;
const enums_1 = require("./enums");
// –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –∞–≥–µ–Ω—Ç–∞
const testAgentSchema = {
    id: 'test-agent',
    name: 'test-agent',
    type: enums_1.EAgentType.MAIN,
    prompt: 'You are a helpful test agent. Respond to user input.',
    functions: [],
    children: [],
    workTimeout: 30000,
    pingInterval: 5000
};
// –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è reflection –∞–≥–µ–Ω—Ç–∞
const testReflectionSchema = {
    id: 'reflection-agent',
    name: 'reflection-agent',
    type: enums_1.EAgentType.REFLECTION,
    prompt: 'You are a reflection agent. Analyze and provide insights.',
    functions: [],
    children: [],
    cronSchedule: '* * * * *',
    cronInitOnStart: false
};
// –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞ –¥–ª—è worker –∞–≥–µ–Ω—Ç–∞
const testWorkerSchema = {
    id: 'test-worker-agent',
    name: 'worker-agent',
    type: enums_1.EAgentType.WORKER,
    prompt: 'You are a worker agent. Execute tasks efficiently.',
    functions: [],
    children: []
};
async function testPackage() {
    console.log('üß™ Testing agented.io package...\n');
    try {
        // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ö–µ–º –∞–≥–µ–Ω—Ç–æ–≤
        console.log('1Ô∏è‚É£ Testing Agent Schemas...');
        console.log('‚úÖ Main Agent Schema:', testAgentSchema.name);
        console.log('   ID:', testAgentSchema.id);
        console.log('   Type:', testAgentSchema.type);
        console.log('   Work Timeout:', testAgentSchema.workTimeout);
        // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ reflection —Å—Ö–µ–º—ã
        console.log('\n2Ô∏è‚É£ Testing Reflection Schema...');
        console.log('‚úÖ Reflection Schema:', testReflectionSchema.name);
        console.log('   ID:', testReflectionSchema.id);
        console.log('   Type:', testReflectionSchema.type);
        console.log('   Cron Schedule:', testReflectionSchema.cronSchedule);
        // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ worker —Å—Ö–µ–º—ã
        console.log('\n3Ô∏è‚É£ Testing Worker Schema...');
        console.log('‚úÖ Worker Schema:', testWorkerSchema.name);
        console.log('   ID:', testWorkerSchema.id);
        console.log('   Type:', testWorkerSchema.type);
        // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ enum –∑–Ω–∞—á–µ–Ω–∏–π
        console.log('\n4Ô∏è‚É£ Testing Enum Values...');
        console.log('   Main Agent Type:', enums_1.EAgentType.MAIN);
        console.log('   Worker Agent Type:', enums_1.EAgentType.WORKER);
        console.log('   Reflection Agent Type:', enums_1.EAgentType.REFLECTION);
        console.log('   IDLE Status:', enums_1.EAgentStatus.IDLE);
        console.log('   WORKING Status:', enums_1.EAgentStatus.WORKING);
        // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
        console.log('\n5Ô∏è‚É£ Testing Response Types...');
        console.log('   Function Response:', enums_1.EAgentResponseType.FUNCTION);
        console.log('   Text Response:', enums_1.EAgentResponseType.TEXT);
        console.log('   Agent Response:', enums_1.EAgentResponseType.AGENT);
        console.log('\nüéâ All tests passed successfully!');
        console.log('\nüì¶ Package structure is working correctly!');
    }
    catch (error) {
        console.error('‚ùå Test failed:', error);
        if (error instanceof Error) {
            console.error('Stack trace:', error.stack);
        }
    }
}
// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (require.main === module) {
    testPackage();
}
